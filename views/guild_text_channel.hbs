<div>
    <a href="/guild?id={{data.guild_id}}">{{data.guild_id}} | {{data.guild_name}} </a>
    <br/>
    <br/>
    <h4>
        {{data.channel_id}} | {{data.channel_name}}
    </h4>
    <br/>
    <br/>
</div>


<div id="messages">
</div>

<br/>
<div id="controls">
    <button lastMessageID="" id="load_more">Load more</button>
</div>
<br/>

<script>
    /**
     * @return {string}
     */
    function GET(url) {
        let http = new XMLHttpRequest();
        http.open('GET', url, false);
        http.send(null);
        return http.responseText;
    }

    let img_type = ['jpeg', 'jpg', 'png', 'gif', 'tiff', 'psd', 'pdf', 'eps', 'ai', 'indd', 'raw', 'apng', 'svg', 'bmp', 'ico'];
    let media_type = ['ogm', 'mp4', 'ogv', 'oga', 'ogx', 'ogg', 'avi', 'mkv', 'webm', 'wav', 'mp3', 'aac'];
    let http = ['https://', 'http://'];

    function getFile(content, attachment = false) {
        let type = content.split('.');
        type = type[type.length - 1];
        type = type.toLocaleLowerCase();
        if (img_type.includes(type)) {
            let img_attachment = document.createElement("img");
            img_attachment.classList.add("img_attachment");
            img_attachment.src = content;
            return img_attachment;
        } else if (media_type.includes(type)) {
            let video = document.createElement("video");
            video.classList.add("attachment_video");
            video.src = content;
            video.height = "270";
            video.width = "400";
            video.setAttribute('controls', "");
            return video;
        } else {
            let a = document.createElement("a");
            a.href = content;
            if (attachment) {
                let sl_spl = content.split('/');
                a.innerHTML = sl_spl[sl_spl.length - 1];
            } else
                a.innerHTML = content;
            return a;
        }
    }

    function is_url(str) {
        for (let h of http)
            if (str.includes(h))
                return true;
        return false;
    }

    function is_file(str) {
        if (str.includes('.')) {
            let type = str.split('.');
            type = type[type.length - 1];
            type = type.toLocaleLowerCase();
            if (type)
                return true;
        }
        return false;
    }

    function add_messages(str) {
        try {
            let messagesDIV = document.getElementById('messages');
            let messages = JSON.parse(str);
            for (let m of messages) {
                let message = document.createElement("div");
                message.classList.add("message");
                let message_head = document.createElement("div");
                message_head.classList.add("message_head");
                let user_avatar = document.createElement("img");
                user_avatar.classList.add("user_avatar");
                user_avatar.src = m.user_avatar.replace('size=2048', 'size=64');
                let user_url = document.createElement("a");
                user_url.href = `/friend_info?id=${m.user_id}`;
                user_url.appendChild(user_avatar);
                let message_head_title = document.createElement("div");
                message_head_title.classList.add("message_head_title");
                message_head_title.innerHTML = `${m.user_name} | <a class='m_user_id' href='/friend_info?id=${m.user_id}'>${m.user_id}</a> | ${m.createdAt}`;
                message_head.appendChild(user_url);
                message_head.appendChild(message_head_title);
                message.appendChild(message_head);
                let message_content = document.createElement("div");
                message_content.classList.add("message_content");
                let content = document.createElement("div");
                let reg = /<@[!]*[0-9]+>/g;
                let matches = m.content.match(reg);
                for (let k in matches) {
                    let match = matches[k];
                    let rep = match.replace('<', '');
                    rep = rep.replace('>', '');
                    rep = rep.replace('@', '');
                    rep = rep.replace('!', '');
                    let u_id = rep;
                    let u_nick = u_id;
                    try {
                        let str = GET(`/get_user_by_id?id=${u_id}`);
                        if (str !== 'error get_user_by_id') {
                            let user = JSON.parse(str);
                            u_nick = user.tag;
                            if (!u_nick) {
                                u_nick = `${user.username}#${user.discriminator}`;
                                if (!u_nick) {
                                    u_nick = `${user.id}`;
                                }
                            }
                        }
                    } catch (e) {
                        console.log(e);
                    }
                    let u_a = `<a class="user_mentions" href='/friend_info?id=${u_id}'>@${u_nick}</a>`;
                    m.content = m.content.replace(match, u_a);
                }
                content.innerHTML = m.content;
                message_content.appendChild(content);
                if (m.content.includes('\n')) {
                    let content_spl = m.content.split('\n');
                    for (let c of content_spl) {
                        if (is_url(c)) {
                            if (is_file(c)) {
                                let html_control = getFile(c);
                                message_content.appendChild(html_control);
                            }
                        }
                    }
                } else if (m.content.includes(' ')) {
                    let content_spl = m.content.split(' ');
                    for (let c of content_spl) {
                        if (is_url(c)) {
                            if (is_file(c)) {
                                let html_control = getFile(c);
                                message_content.appendChild(html_control);
                            }
                        }
                    }
                } else {
                    if (is_url(m.content)) {
                        if (is_file(m.content)) {
                            let html_control = getFile(m.content);
                            message_content.appendChild(html_control);
                        }
                    }
                }
                for (let attachment of m.attachments) {
                    let url = attachment.url;
                    if (!url)
                        url = attachment.proxyURL;
                    let html_control = getFile(url, true);
                    message_content.appendChild(html_control);
                    message_content.appendChild(document.createElement("br"));
                }
                message.appendChild(message_content);
                messagesDIV.appendChild(message);
                messagesDIV.appendChild(document.createElement("br"));
                messagesDIV.appendChild(document.createElement("hr"));
            }
            let load_more = document.getElementById('load_more');
            load_more.setAttribute('lastMessageID', messages[messages.length - 1].id);
        } catch (e) {
            if (str.length < 100)
                document.getElementById('messages').innerHTML += str;
            document.getElementById('messages').innerHTML += e;
        }
    }

    let baseURL = '/guild_text_channel_messages?id={{data.channel_id}}';
    let str = GET(baseURL);
    add_messages(str);
    document.getElementById('load_more').onclick = function () {
        let lastMessageID = this.getAttribute('lastMessageID');
        let url = `${baseURL}&lastMessageID=${lastMessageID}`;
        let str = GET(url);
        add_messages(str);
    };
</script>
<style>
    .m_user_id
    {
        color: #6f7a88;
        text-decoration: none;
    }
    .user_mentions {
        color: #7289da;
        font-weight: bold;
    }

    .img_attachment {
        border: 1px solid black;
        width: 400px;
    }

    .attachment_video {
        border: 1px solid black;
    }

    .attachments_img {
        width: 200px;
    }

    .user_avatar {
        display: inline-block;
        height: 35px;
        width: 35px;
        border: 1px solid black;
        border-radius: 90px;
    }

    .message_head_title {
        display: inline-block;
        margin-top: 7px;
        margin-left: 10px;
        position: absolute;
        font-style: italic;
    }

    .message_head {
        margin-bottom: 5px;
    }

    .message_content {
        margin-left: 45px;
    }
</style>